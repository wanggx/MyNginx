---- ngx_pagesize Matches (72 in 38 files) ----
Ngx_alloc.c (os\unix):ngx_uint_t  ngx_pagesize;
Ngx_alloc.c (os\win32):ngx_uint_t  ngx_pagesize;
Ngx_alloc.h (os\unix):extern ngx_uint_t  ngx_pagesize;
Ngx_alloc.h (os\win32):extern ngx_uint_t  ngx_pagesize;
Ngx_buf.c (core):            aligned = (cl->buf->file_pos + size + ngx_pagesize - 1)
Ngx_buf.c (core):                       & ~((off_t) ngx_pagesize - 1);
Ngx_darwin_sendfile_chain.c (os\unix):    if (limit == 0 || limit > (off_t) (NGX_MAX_SIZE_T_VALUE - ngx_pagesize)) {
Ngx_darwin_sendfile_chain.c (os\unix):        limit = NGX_MAX_SIZE_T_VALUE - ngx_pagesize;
Ngx_event_openssl.c (event):    if (limit == 0 || limit > (off_t) (NGX_MAX_INT32_VALUE - ngx_pagesize)) {
Ngx_event_openssl.c (event):        limit = NGX_MAX_INT32_VALUE - ngx_pagesize;
Ngx_freebsd_sendfile_chain.c (os\unix):    if (limit == 0 || limit > (off_t) (NGX_MAX_SIZE_T_VALUE - ngx_pagesize)) {
Ngx_freebsd_sendfile_chain.c (os\unix):        limit = NGX_MAX_SIZE_T_VALUE - ngx_pagesize;
Ngx_http_core_module.c (http):                              (size_t) 2 * ngx_pagesize);
Ngx_http_fastcgi_module.c (http\modules):                              (size_t) ngx_pagesize);
Ngx_http_fastcgi_module.c (http\modules):                              8, ngx_pagesize);
Ngx_http_gunzip_filter_module.c (http\modules):                              (128 * 1024) / ngx_pagesize, ngx_pagesize);
Ngx_http_gzip_filter_module.c (http\modules):                              (128 * 1024) / ngx_pagesize, ngx_pagesize);
Ngx_http_limit_conn_module.c (http\modules):            if (size < (ssize_t) (8 * ngx_pagesize)) {
Ngx_http_limit_req_module.c (http\modules):            if (size < (ssize_t) (8 * ngx_pagesize)) {
Ngx_http_memcached_module.c (http\modules):                              (size_t) ngx_pagesize);
Ngx_http_proxy_module.c (http\modules):                              (size_t) ngx_pagesize);
Ngx_http_proxy_module.c (http\modules):                              8, ngx_pagesize);
Ngx_http_scgi_module.c (http\modules):                              (size_t) ngx_pagesize);
Ngx_http_scgi_module.c (http\modules):                              8, ngx_pagesize);
Ngx_http_ssl_module.c (http\modules):            if (n < (ngx_int_t) (8 * ngx_pagesize)) {
Ngx_http_upstream_zone_module.c (http\modules):        if (size < (ssize_t) (8 * ngx_pagesize)) {
Ngx_http_uwsgi_module.c (http\modules):                              (size_t) ngx_pagesize);
Ngx_http_uwsgi_module.c (http\modules):                              8, ngx_pagesize);
Ngx_http_write_filter_module.c (http):        && c->sent - sent >= limit - (off_t) (2 * ngx_pagesize))
Ngx_linux_sendfile_chain.c (os\unix):    if (limit == 0 || limit > (off_t) (NGX_SENDFILE_MAXSIZE - ngx_pagesize)) {
Ngx_linux_sendfile_chain.c (os\unix):        limit = NGX_SENDFILE_MAXSIZE - ngx_pagesize;
Ngx_mail_imap_module.c (mail):                              (size_t) ngx_pagesize);
Ngx_mail_proxy_module.c (mail):                              (size_t) ngx_pagesize);
Ngx_mail_smtp_module.c (mail):                              (size_t) ngx_pagesize);
Ngx_mail_ssl_module.c (mail):            if (n < (ngx_int_t) (8 * ngx_pagesize)) {
Ngx_palloc.c (core):    slot = &ngx_cycle->cache[(size + ngx_pagesize - 1) / ngx_pagesize];
Ngx_palloc.h (core):#define NGX_MAX_ALLOC_FROM_POOL  (ngx_pagesize - 1)
Ngx_posix_init.c (os\unix):    ngx_pagesize = getpagesize();
Ngx_posix_init.c (os\unix):    for (n = ngx_pagesize; n >>= 1; ngx_pagesize_shift++) { /* void */ }
Ngx_radix_tree.c (core):        switch (ngx_pagesize / sizeof(ngx_radix_node_t)) {
Ngx_radix_tree.c (core):        tree->start = ngx_pmemalign(tree->pool, ngx_pagesize, ngx_pagesize);
Ngx_radix_tree.c (core):        tree->size = ngx_pagesize;
Ngx_slab.c (core):        ngx_slab_max_size = ngx_pagesize / 2;
Ngx_slab.c (core):        ngx_slab_exact_size = ngx_pagesize / (8 * sizeof(uintptr_t));
Ngx_slab.c (core):    pages = (ngx_uint_t) (size / (ngx_pagesize + sizeof(ngx_slab_page_t)));
Ngx_slab.c (core):                                 ngx_pagesize);
Ngx_slab.c (core):    m = pages - (pool->end - pool->start) / ngx_pagesize;
Ngx_slab.c (core):                                          + ((size % ngx_pagesize) ? 1 : 0));
Ngx_slab.c (core):        n = ((uintptr_t) p & (ngx_pagesize - 1)) >> shift;
Ngx_slab.c (core):                             ((uintptr_t) p & ~((uintptr_t) ngx_pagesize - 1));
Ngx_slab.c (core):                (((uintptr_t) p & (ngx_pagesize - 1)) >> ngx_slab_exact_shift);
Ngx_slab.c (core):        m = (uintptr_t) 1 << ((((uintptr_t) p & (ngx_pagesize - 1)) >> shift)
Ngx_slab.c (core):        if ((uintptr_t) p & (ngx_pagesize - 1)) {
Ngx_solaris_sendfilev_chain.c (os\unix):    if (limit == 0 || limit > (off_t) (NGX_MAX_SIZE_T_VALUE - ngx_pagesize)) {
Ngx_solaris_sendfilev_chain.c (os\unix):        limit = NGX_MAX_SIZE_T_VALUE - ngx_pagesize;
Ngx_solaris_sendfilev_chain.c (os\unix):                    aligned = (cl->buf->file_pos + size + ngx_pagesize - 1)
Ngx_solaris_sendfilev_chain.c (os\unix):                               & ~((off_t) ngx_pagesize - 1);
Ngx_stream_limit_conn_module.c (stream):            if (size < (ssize_t) (8 * ngx_pagesize)) {
Ngx_stream_ssl_module.c (stream):            if (n < (ngx_int_t) (8 * ngx_pagesize)) {
Ngx_stream_upstream_zone_module.c (stream):        if (size < (ssize_t) (8 * ngx_pagesize)) {
Ngx_win32_init.c (os\win32):    ngx_pagesize = si.dwPageSize;
Ngx_win32_init.c (os\win32):    for (n = ngx_pagesize; n >>= 1; ngx_pagesize_shift++) { /* void */ }
Ngx_writev_chain.c (os\unix):    if (limit == 0 || limit > (off_t) (NGX_MAX_SIZE_T_VALUE - ngx_pagesize)) {
Ngx_writev_chain.c (os\unix):        limit = NGX_MAX_SIZE_T_VALUE - ngx_pagesize;
Ngx_wsasend_chain.c (os\win32):    if (limit == 0 || limit > (off_t) (NGX_MAX_UINT32_VALUE - ngx_pagesize)) {
Ngx_wsasend_chain.c (os\win32):        limit = NGX_MAX_UINT32_VALUE - ngx_pagesize;
Ngx_wsasend_chain.c (os\win32):        if (limit == 0 || limit > (off_t) (NGX_MAX_UINT32_VALUE - ngx_pagesize))
Ngx_wsasend_chain.c (os\win32):            limit = NGX_MAX_UINT32_VALUE - ngx_pagesize;
