---- ngx_modules Matches (152 in 16 files) ----
Nginx.c (core):    for (i = 0; ngx_modules[i]; i++) {
Nginx.c (core):        ngx_modules[i]->index = ngx_max_module++;
Ngx_conf_file.c (core):    for (i = 0; ngx_modules[i]; i++) {
Ngx_conf_file.c (core):        cmd = ngx_modules[i]->commands;
Ngx_conf_file.c (core):            if (ngx_modules[i]->type != NGX_CONF_MODULE
Ngx_conf_file.c (core):                && ngx_modules[i]->type != cf->module_type)
Ngx_conf_file.c (core):                conf = ((void **) cf->ctx)[ngx_modules[i]->index];
Ngx_conf_file.c (core):                conf = &(((void **) cf->ctx)[ngx_modules[i]->index]);
Ngx_conf_file.c (core):                    conf = confp[ngx_modules[i]->ctx_index];
Ngx_conf_file.h (core):extern ngx_module_t  *ngx_modules[];
Ngx_cycle.c (core):    for (i = 0; ngx_modules[i]; i++) {
Ngx_cycle.c (core):        if (ngx_modules[i]->type != NGX_CORE_MODULE) {
Ngx_cycle.c (core):        module = ngx_modules[i]->ctx;
Ngx_cycle.c (core):            cycle->conf_ctx[ngx_modules[i]->index] = rv;
Ngx_cycle.c (core):    for (i = 0; ngx_modules[i]; i++) {
Ngx_cycle.c (core):        if (ngx_modules[i]->type != NGX_CORE_MODULE) {
Ngx_cycle.c (core):        module = ngx_modules[i]->ctx;
Ngx_cycle.c (core):            if (module->init_conf(cycle, cycle->conf_ctx[ngx_modules[i]->index])
Ngx_cycle.c (core):    for (i = 0; ngx_modules[i]; i++) {
Ngx_cycle.c (core):        if (ngx_modules[i]->init_module) {
Ngx_cycle.c (core):            if (ngx_modules[i]->init_module(cycle) != NGX_OK) {
Ngx_event.c (event):    for (m = 0; ngx_modules[m]; m++) {
Ngx_event.c (event):        if (ngx_modules[m]->type != NGX_EVENT_MODULE) {
Ngx_event.c (event):        if (ngx_modules[m]->ctx_index != ecf->use) {
Ngx_event.c (event):        module = ngx_modules[m]->ctx;
Ngx_event.c (event):    for (i = 0; ngx_modules[i]; i++) {
Ngx_event.c (event):        if (ngx_modules[i]->type != NGX_EVENT_MODULE) {
Ngx_event.c (event):        ngx_modules[i]->ctx_index = ngx_event_max_module++;
Ngx_event.c (event):    for (i = 0; ngx_modules[i]; i++) {
Ngx_event.c (event):        if (ngx_modules[i]->type != NGX_EVENT_MODULE) {
Ngx_event.c (event):        m = ngx_modules[i]->ctx;
Ngx_event.c (event):            (*ctx)[ngx_modules[i]->ctx_index] = m->create_conf(cf->cycle);
Ngx_event.c (event):            if ((*ctx)[ngx_modules[i]->ctx_index] == NULL) {
Ngx_event.c (event):    for (i = 0; ngx_modules[i]; i++) {
Ngx_event.c (event):        if (ngx_modules[i]->type != NGX_EVENT_MODULE) {
Ngx_event.c (event):        m = ngx_modules[i]->ctx;
Ngx_event.c (event):            rv = m->init_conf(cf->cycle, (*ctx)[ngx_modules[i]->ctx_index]);
Ngx_event.c (event):    for (m = 0; ngx_modules[m]; m++) {
Ngx_event.c (event):        if (ngx_modules[m]->type != NGX_EVENT_MODULE) {
Ngx_event.c (event):        module = ngx_modules[m]->ctx;
Ngx_event.c (event):                ecf->use = ngx_modules[m]->ctx_index;
Ngx_event.c (event):        for (i = 0; ngx_modules[i]; i++) {
Ngx_event.c (event):            if (ngx_modules[i]->type != NGX_EVENT_MODULE) {
Ngx_event.c (event):            event_module = ngx_modules[i]->ctx;
Ngx_event.c (event):            module = ngx_modules[i];
Ngx_http.c (http):    for (m = 0; ngx_modules[m]; m++) {
Ngx_http.c (http):        if (ngx_modules[m]->type != NGX_HTTP_MODULE) {
Ngx_http.c (http):        ngx_modules[m]->ctx_index = ngx_http_max_module++;
Ngx_http.c (http):    for (m = 0; ngx_modules[m]; m++) {
Ngx_http.c (http):        if (ngx_modules[m]->type != NGX_HTTP_MODULE) {
Ngx_http.c (http):        module = ngx_modules[m]->ctx;
Ngx_http.c (http):        mi = ngx_modules[m]->ctx_index;
Ngx_http.c (http):    for (m = 0; ngx_modules[m]; m++) {
Ngx_http.c (http):        if (ngx_modules[m]->type != NGX_HTTP_MODULE) {
Ngx_http.c (http):        module = ngx_modules[m]->ctx;
Ngx_http.c (http):    for (m = 0; ngx_modules[m]; m++) {
Ngx_http.c (http):        if (ngx_modules[m]->type != NGX_HTTP_MODULE) {
Ngx_http.c (http):        module = ngx_modules[m]->ctx;
Ngx_http.c (http):        mi = ngx_modules[m]->ctx_index;
Ngx_http.c (http):    for (m = 0; ngx_modules[m]; m++) {
Ngx_http.c (http):        if (ngx_modules[m]->type != NGX_HTTP_MODULE) {
Ngx_http.c (http):        module = ngx_modules[m]->ctx;
Ngx_http_core_module.c (http):    for (i = 0; ngx_modules[i]; i++) {
Ngx_http_core_module.c (http):        if (ngx_modules[i]->type != NGX_HTTP_MODULE) {
Ngx_http_core_module.c (http):        module = ngx_modules[i]->ctx;
Ngx_http_core_module.c (http):            ctx->srv_conf[ngx_modules[i]->ctx_index] = mconf;
Ngx_http_core_module.c (http):            ctx->loc_conf[ngx_modules[i]->ctx_index] = mconf;
Ngx_http_core_module.c (http):    for (i = 0; ngx_modules[i]; i++) {
Ngx_http_core_module.c (http):        if (ngx_modules[i]->type != NGX_HTTP_MODULE) {
Ngx_http_core_module.c (http):        module = ngx_modules[i]->ctx;
Ngx_http_core_module.c (http):            ctx->loc_conf[ngx_modules[i]->ctx_index] =
Ngx_http_core_module.c (http):            if (ctx->loc_conf[ngx_modules[i]->ctx_index] == NULL) {
Ngx_http_core_module.c (http):    for (i = 0; ngx_modules[i]; i++) {
Ngx_http_core_module.c (http):        if (ngx_modules[i]->type != NGX_HTTP_MODULE) {
Ngx_http_core_module.c (http):        module = ngx_modules[i]->ctx;
Ngx_http_core_module.c (http):            ctx->loc_conf[ngx_modules[i]->ctx_index] = mconf;
Ngx_http_rewrite_module.c (http\modules):    for (i = 0; ngx_modules[i]; i++) {
Ngx_http_rewrite_module.c (http\modules):        if (ngx_modules[i]->type != NGX_HTTP_MODULE) {
Ngx_http_rewrite_module.c (http\modules):        module = ngx_modules[i]->ctx;
Ngx_http_rewrite_module.c (http\modules):            ctx->loc_conf[ngx_modules[i]->ctx_index] = mconf;
Ngx_http_upstream.c (http):    for (m = 0; ngx_modules[m]; m++) {
Ngx_http_upstream.c (http):        if (ngx_modules[m]->type != NGX_HTTP_MODULE) {
Ngx_http_upstream.c (http):        module = ngx_modules[m]->ctx;
Ngx_http_upstream.c (http):            ctx->srv_conf[ngx_modules[m]->ctx_index] = mconf;
Ngx_http_upstream.c (http):            ctx->loc_conf[ngx_modules[m]->ctx_index] = mconf;
Ngx_mail.c (mail):    for (m = 0; ngx_modules[m]; m++) {
Ngx_mail.c (mail):        if (ngx_modules[m]->type != NGX_MAIL_MODULE) {
Ngx_mail.c (mail):        ngx_modules[m]->ctx_index = ngx_mail_max_module++;
Ngx_mail.c (mail):    for (m = 0; ngx_modules[m]; m++) {
Ngx_mail.c (mail):        if (ngx_modules[m]->type != NGX_MAIL_MODULE) {
Ngx_mail.c (mail):        module = ngx_modules[m]->ctx;
Ngx_mail.c (mail):        mi = ngx_modules[m]->ctx_index;
Ngx_mail.c (mail):    for (m = 0; ngx_modules[m]; m++) {
Ngx_mail.c (mail):        if (ngx_modules[m]->type != NGX_MAIL_MODULE) {
Ngx_mail.c (mail):        module = ngx_modules[m]->ctx;
Ngx_mail.c (mail):        mi = ngx_modules[m]->ctx_index;
Ngx_mail_core_module.c (mail):    for (m = 0; ngx_modules[m]; m++) {
Ngx_mail_core_module.c (mail):        if (ngx_modules[m]->type != NGX_MAIL_MODULE) {
Ngx_mail_core_module.c (mail):        module = ngx_modules[m]->ctx;
Ngx_mail_core_module.c (mail):            ctx->srv_conf[ngx_modules[m]->ctx_index] = mconf;
Ngx_mail_core_module.c (mail):        for (m = 0; ngx_modules[m]; m++) {
Ngx_mail_core_module.c (mail):            if (ngx_modules[m]->type != NGX_MAIL_MODULE) {
Ngx_mail_core_module.c (mail):            module = ngx_modules[m]->ctx;
Ngx_mail_core_module.c (mail):    for (m = 0; ngx_modules[m]; m++) {
Ngx_mail_core_module.c (mail):        if (ngx_modules[m]->type != NGX_MAIL_MODULE) {
Ngx_mail_core_module.c (mail):        module = ngx_modules[m]->ctx;
Ngx_process_cycle.c (os\unix):    for (i = 0; ngx_modules[i]; i++) {
Ngx_process_cycle.c (os\unix):        if (ngx_modules[i]->init_process) {
Ngx_process_cycle.c (os\unix):            if (ngx_modules[i]->init_process(cycle) == NGX_ERROR) {
Ngx_process_cycle.c (os\unix):            for (i = 0; ngx_modules[i]; i++) {
Ngx_process_cycle.c (os\unix):                if (ngx_modules[i]->exit_process) {
Ngx_process_cycle.c (os\unix):                    ngx_modules[i]->exit_process(cycle);
Ngx_process_cycle.c (os\unix):    for (i = 0; ngx_modules[i]; i++) {
Ngx_process_cycle.c (os\unix):        if (ngx_modules[i]->exit_master) {
Ngx_process_cycle.c (os\unix):            ngx_modules[i]->exit_master(cycle);
Ngx_process_cycle.c (os\unix):    for (i = 0; ngx_modules[i]; i++) {
Ngx_process_cycle.c (os\unix):        if (ngx_modules[i]->init_process) {
Ngx_process_cycle.c (os\unix):            if (ngx_modules[i]->init_process(cycle) == NGX_ERROR) {
Ngx_process_cycle.c (os\unix):    for (i = 0; ngx_modules[i]; i++) {
Ngx_process_cycle.c (os\unix):        if (ngx_modules[i]->exit_process) {
Ngx_process_cycle.c (os\unix):            ngx_modules[i]->exit_process(cycle);
Ngx_process_cycle.c (os\win32):    for (i = 0; ngx_modules[i]; i++) {
Ngx_process_cycle.c (os\win32):        if (ngx_modules[i]->exit_master) {
Ngx_process_cycle.c (os\win32):            ngx_modules[i]->exit_master(cycle);
Ngx_process_cycle.c (os\win32):    for (n = 0; ngx_modules[n]; n++) {
Ngx_process_cycle.c (os\win32):        if (ngx_modules[n]->init_process) {
Ngx_process_cycle.c (os\win32):            if (ngx_modules[n]->init_process(cycle) == NGX_ERROR) {
Ngx_process_cycle.c (os\win32):    for (i = 0; ngx_modules[i]; i++) {
Ngx_process_cycle.c (os\win32):        if (ngx_modules[i]->exit_process) {
Ngx_process_cycle.c (os\win32):            ngx_modules[i]->exit_process(cycle);
Ngx_stream.c (stream):    for (m = 0; ngx_modules[m]; m++) {
Ngx_stream.c (stream):        if (ngx_modules[m]->type != NGX_STREAM_MODULE) {
Ngx_stream.c (stream):        ngx_modules[m]->ctx_index = ngx_stream_max_module++;
Ngx_stream.c (stream):    for (m = 0; ngx_modules[m]; m++) {
Ngx_stream.c (stream):        if (ngx_modules[m]->type != NGX_STREAM_MODULE) {
Ngx_stream.c (stream):        module = ngx_modules[m]->ctx;
Ngx_stream.c (stream):        mi = ngx_modules[m]->ctx_index;
Ngx_stream.c (stream):    for (m = 0; ngx_modules[m]; m++) {
Ngx_stream.c (stream):        if (ngx_modules[m]->type != NGX_STREAM_MODULE) {
Ngx_stream.c (stream):        module = ngx_modules[m]->ctx;
Ngx_stream.c (stream):        mi = ngx_modules[m]->ctx_index;
Ngx_stream.c (stream):    for (m = 0; ngx_modules[m]; m++) {
Ngx_stream.c (stream):        if (ngx_modules[m]->type != NGX_STREAM_MODULE) {
Ngx_stream.c (stream):        module = ngx_modules[m]->ctx;
Ngx_stream_core_module.c (stream):    for (m = 0; ngx_modules[m]; m++) {
Ngx_stream_core_module.c (stream):        if (ngx_modules[m]->type != NGX_STREAM_MODULE) {
Ngx_stream_core_module.c (stream):        module = ngx_modules[m]->ctx;
Ngx_stream_core_module.c (stream):            ctx->srv_conf[ngx_modules[m]->ctx_index] = mconf;
Ngx_stream_upstream.c (stream):    for (m = 0; ngx_modules[m]; m++) {
Ngx_stream_upstream.c (stream):        if (ngx_modules[m]->type != NGX_STREAM_MODULE) {
Ngx_stream_upstream.c (stream):        module = ngx_modules[m]->ctx;
Ngx_stream_upstream.c (stream):            ctx->srv_conf[ngx_modules[m]->ctx_index] = mconf;
